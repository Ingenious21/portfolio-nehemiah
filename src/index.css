@import "tailwindcss";

@theme {
  --color-border: hsl(var(--border));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-card: hsl(var(--card));

  --animate-float: float 6s ease-in-out infinite;
  --animate-pulse-subtle: pulse-subtle 4s ease-in-out infinite;
  --animate-fade-in: fade-in 0.7s ease-out forwards;
  --animate-fade-in-delay-1: fade-in 0.7s ease-out 0.2s forwards;
  --animate-fade-in-delay-2: fade-in 0.7s ease-out 0.4s forwards;
  --animate-fade-in-delay-3: fade-in 0.7s ease-out 0.6s forwards;
  --animate-fade-in-delay-4: fade-in 0.7s ease-out 0.8s forwards;
  --animate-meteor: meteor 5s linear infinite;
  --animate-float-programming: float-programming 35s linear infinite;
  --animate-rotate-slow: rotate-slow 20s linear infinite;
  --animate-shimmer: shimmer 2s infinite;

  @keyframes float {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }
  
  @keyframes pulse-subtle {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.8;
    }
  }
  
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes meteor {
    0% {
      transform: rotate(215deg) translateX(0);
      opacity: 1;
    }
    70% {
      opacity: 1;
    }
    100% {
      transform: rotate(215deg) translateX(-500px);
      opacity: 0;
    }
  }
  
  @keyframes float-programming {
    0% {
      transform: translateX(-200px) translateY(0px) rotateZ(0deg) rotateY(0deg) scale(1);
    }
    12.5% {
      transform: translateX(-100px) translateY(-60px) rotateZ(45deg) rotateY(45deg) scale(1.1);
    }
    25% {
      transform: translateX(100px) translateY(-40px) rotateZ(90deg) rotateY(90deg) scale(0.9);
    }
    37.5% {
      transform: translateX(200px) translateY(20px) rotateZ(135deg) rotateY(135deg) scale(1.05);
    }
    50% {
      transform: translateX(150px) translateY(80px) rotateZ(180deg) rotateY(180deg) scale(0.95);
    }
    62.5% {
      transform: translateX(50px) translateY(60px) rotateZ(225deg) rotateY(225deg) scale(1.08);
    }
    75% {
      transform: translateX(-50px) translateY(-20px) rotateZ(270deg) rotateY(270deg) scale(0.92);
    }
    87.5% {
      transform: translateX(-150px) translateY(-80px) rotateZ(315deg) rotateY(315deg) scale(1.12);
    }
    100% {
      transform: translateX(-200px) translateY(0px) rotateZ(360deg) rotateY(360deg) scale(1);
    }
  }
  
  @keyframes rotate-slow {
    0% {
      transform: rotateZ(0deg);
    }
    100% {
      transform: rotateZ(360deg);
    }
  }

  @keyframes grow {
    0% {
      transform: scaleX(0);
    }
    100% {
      transform: scaleX(1);
    }
  }

  @keyframes shimmer {
    0% { 
      transform: translateX(-100%); 
    }
    100% { 
      transform: translateX(100%); 
    }
  }
}

@layer base {
  :root {
    /* Light mode colors as HSL values */
    --background: 204 65% 97%;
    --foreground: 222 47% 11%;
    
    --card: 0 0% 100%;
    --card-foreground: 222 47% 11%;
    
    --primary: 36 100% 55%;
    --primary-foreground: 0 0% 100%;
    
    --secondary: 210 40% 96%;
    --secondary-foreground: 222 47% 11%;
    
    --muted: 210 40% 96%;
    --muted-foreground: 215 16% 47%;
    
    --accent: 210 40% 96%;
    --accent-foreground: 222 47% 11%;
    
    --destructive: 0 84% 60%;
    --destructive-foreground: 210 40% 98%;
    
    --border: 214 32% 91%;
    --input: 214 32% 91%;
    --ring: 36 100% 55%;
    
    --radius: 0.5rem;
  }

  .dark {
    /* Dark mode colors as HSL values */
    --background: 222 47% 5%;
    --foreground: 213 31% 91%;
    
    --card: 222 47% 8%;
    --card-foreground: 213 31% 91%;
    
    --primary: 36 100% 58%;
    --primary-foreground: 0 0% 0%;
    
    --secondary: 217 33% 18%;
    --secondary-foreground: 210 40% 98%;
    
    --muted: 217 33% 18%;
    --muted-foreground: 215 20% 65%;
    
    --accent: 217 33% 18%;
    --accent-foreground: 210 40% 98%;
    
    --destructive: 0 63% 31%;
    --destructive-foreground: 210 40% 98%;
    
    --border: 217 33% 18%;
    --input: 217 33% 18%;
    --ring: 36 100% 58%;
  }

  * {
    border-color: hsl(var(--border));
  }

  html {
    scroll-behavior: smooth;
  }

  body {
    color: hsl(var(--foreground));
    background: hsl(var(--background));
    transition: color 0.3s, background-color 0.3s;
    font-feature-settings: "rlig" 1, "calt" 1;
  }

  /* Respect user's motion preferences */
  @media (prefers-reduced-motion: reduce) {
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }
}

@utility container {
  margin-inline: auto;
  /* ✅ UPDATED: Responsive padding - smaller on mobile, larger on desktop */
  padding-inline: clamp(1rem, 5vw, 2rem);

  @media (width >= 640px) {
    max-width: 640px;
  }
  @media (width >= 768px) {
    max-width: 768px;
  }
  @media (width >= 1024px) {
    max-width: 1024px;
  }
  @media (width >= 1280px) {
    max-width: 1280px;
  }
  @media (width >= 1400px) {
    max-width: 1400px;
  }
}

@utility textGlow {
  position: relative;
  text-shadow: 0 0 10px rgba(167, 139, 250, 1);
}

@utility cardHover {
  transition: all 0.3s ease;
  background: hsl(var(--card) / 0.6);
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  border: 1px solid hsl(var(--border));
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  position: relative;
  overflow: hidden;
}

.cardHover:hover {
  transform: translateY(-4px) scale(1.01);
  box-shadow: 0 16px 64px rgba(0, 0, 0, 0.15);
  border-color: hsl(var(--primary) / 0.4);
}

.cardHover::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, 
    transparent 0%, 
    hsl(var(--primary) / 0.6) 50%,
    transparent 100%);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.cardHover:hover::before {
  opacity: 1;
}

@utility gradientBorder {
  position: relative;
  border-radius: 0.375rem;
  background: hsl(var(--card) / 0.6);
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  border: 1px solid hsl(var(--border));
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  position: relative;
  overflow: hidden;
}

.gradientBorder::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(90deg, 
    transparent 0%, 
    hsl(var(--primary) / 0.6) 50%,
    transparent 100%);
  opacity: 0.6;
}

@utility programmingIcon {
  position: absolute;
  user-select: none;
  display: flex;
  align-items: center;
  justify-content: center;
  transform-style: preserve-3d;
  backface-visibility: hidden;
  will-change: transform, opacity;
  pointer-events: none;
  
  /* ✅ UPDATED: Fluid responsive sizing with clamp() */
  width: clamp(28px, 4vw, 60px) !important;
  height: clamp(28px, 4vw, 60px) !important;
  
  filter: 
    drop-shadow(0 8px 16px rgba(0, 0, 0, 0.3))
    drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2))
    drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
  
  svg {
    width: 100%;
    height: 100%;
    display: block;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
}

/* ===== OPTIMIZED LIGHT THEME ICON FILTERS ===== */

/* Base light theme icons - Simplified filters for better performance */
.light .programmingIcon svg {
  filter: 
    drop-shadow(0 2px 4px rgba(0, 0, 0, 0.25))
    drop-shadow(0 1px 2px rgba(0, 0, 0, 0.15));
}

/* Light-colored icons in light mode - Reduced filter complexity */
.light .programmingIcon[data-color="#F7DF1E"] svg, /* JavaScript - Yellow */
.light .programmingIcon[data-color="#61DAFB"] svg, /* React - Light Blue */
.light .programmingIcon[data-color="#E34F26"] svg, /* HTML5 - Orange */
.light .programmingIcon[data-color="#1572B6"] svg { /* CSS3 - Blue */
  filter: 
    brightness(0.75)
    contrast(1.25)
    saturate(1.15)
    drop-shadow(0 2px 6px rgba(0, 0, 0, 0.4))
    drop-shadow(0 1px 3px rgba(0, 0, 0, 0.25));
}

/* JavaScript icon - Most problematic, needs extra care */
.light .programmingIcon[data-color="#F7DF1E"] svg {
  filter: 
    brightness(0.65)
    contrast(1.3)
    saturate(1.2)
    drop-shadow(0 3px 6px rgba(0, 0, 0, 0.5))
    drop-shadow(0 1px 3px rgba(0, 0, 0, 0.3));
}

/* React icon - Light blue needs good contrast */
.light .programmingIcon[data-color="#61DAFB"] svg {
  filter: 
    brightness(0.7)
    contrast(1.3)
    saturate(1.2)
    drop-shadow(0 2px 6px rgba(0, 0, 0, 0.45))
    drop-shadow(0 1px 3px rgba(0, 0, 0, 0.3));
}

/* Dark icons in light mode - Simplified white glow */
.light .programmingIcon[data-color="#000000"] svg, /* Express - Black */
.light .programmingIcon[data-color="#181717"] svg, /* GitHub - Dark Gray */
.light .programmingIcon[data-color="#092E20"] svg { /* Django - Dark Green */
  filter: 
    drop-shadow(0 0 4px rgba(255, 255, 255, 0.9))
    drop-shadow(0 0 8px rgba(255, 255, 255, 0.6))
    drop-shadow(0 2px 4px rgba(0, 0, 0, 0.25));
}

/* Dark mode icons - Keep simple for better performance */
.dark .programmingIcon svg {
  filter: 
    drop-shadow(0 2px 6px rgba(0, 0, 0, 0.3))
    drop-shadow(0 1px 3px rgba(0, 0, 0, 0.2));
}

/* Dark icons in dark mode - Simplified brightness boost */
.dark .programmingIcon[data-color="#000000"] svg,
.dark .programmingIcon[data-color="#181717"] svg,
.dark .programmingIcon[data-color="#092E20"] svg {
  filter: 
    brightness(1.3)
    drop-shadow(0 0 6px rgba(255, 255, 255, 0.5))
    drop-shadow(0 2px 4px rgba(0, 0, 0, 0.3));
}

@utility star {
  position: absolute;
  border-radius: 50%;
  background-color: white;
  box-shadow: 0 0 10px 2px rgba(255, 255, 255, 0.4);
}

@utility meteor {
  position: absolute;
  border-radius: 50%;
  background: linear-gradient(90deg, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 0.8) 50%, rgba(255, 255, 255, 0) 100%);
  box-shadow: 0 0 10px 5px rgba(255, 255, 255, 0.3);
}

@utility sectionGlass {
  background: hsl(var(--card) / 0.25);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  border: 1px solid hsl(var(--border) / 0.15);
  border-radius: 24px;
}

@utility glassInput {
  background: hsl(var(--card) / 0.6);
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  border: 1px solid hsl(var(--border));
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.glassInput:focus {
  outline: none;
  border-color: hsl(var(--primary) / 0.6);
  background: hsl(var(--card) / 0.8);
  box-shadow: 0 0 0 3px hsl(var(--primary) / 0.3), 0 8px 32px rgba(0, 0, 0, 0.1);
}

@utility glassProgress {
  background: hsl(var(--card) / 0.25);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  border: 1px solid hsl(var(--border) / 0.2);
  border-radius: 20px;
  overflow: hidden;
  position: relative;
}

@utility glassProgressFill {
  background: hsl(var(--primary));
  border-radius: 20px;
  position: relative;
  box-shadow: 0 0 10px hsl(var(--primary) / 0.3);
  transform-origin: left;
}

.glassProgressFill::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg,
    transparent 0%,
    hsla(0, 0%, 100%, 0.3) 50%,
    transparent 100%);
  animation: shimmer 2s infinite;
}

@utility animateFloat {
  animation: float 6s ease-in-out infinite;
}

@utility animatePulseSubtle {
  animation: pulse-subtle 4s ease-in-out infinite;
}

@utility animateFadeIn {
  animation: fade-in 0.7s ease-out forwards;
}

@utility animateFadeInDelay1 {
  animation: fade-in 0.7s ease-out 0.2s forwards;
}

@utility animateFadeInDelay2 {
  animation: fade-in 0.7s ease-out 0.4s forwards;
}

@utility animateFadeInDelay3 {
  animation: fade-in 0.7s ease-out 0.6s forwards;
}

@utility animateFadeInDelay4 {
  animation: fade-in 0.7s ease-out 0.8s forwards;
}

@utility animateMeteor {
  animation: meteor 5s linear infinite;
}

@utility animateFloatProgramming {
  animation: float-programming 35s linear infinite;
}

@utility animateRotateSlow {
  animation: rotate-slow 20s linear infinite;
}

@utility animateShimmer {
  animation: shimmer 2s infinite;
}

#root {
  max-width: 100%;
  margin: 0 auto;
  padding: 0;
  text-align: center;
}

@utility cosmicButton {
  color: hsl(var(--primary-foreground));
  font-weight: 600;
  border-radius: 9999px;
  padding-left: 2rem;
  padding-right: 2rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  /* ✅ ADDED: Minimum 44px touch target for mobile accessibility */
  min-height: 44px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: 0;
  transition: all 0.3s ease;
  background: hsl(var(--primary));
  box-shadow: 0 0 20px hsl(var(--primary) / 0.3);
  position: relative;
  overflow: hidden;
}

.cosmicButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg,
    transparent 0%,
    hsla(0, 0%, 100%, 0.4) 50%,
    transparent 100%);
  transition: left 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.cosmicButton:hover {
  transform: translateY(-2px) scale(1.02);
  box-shadow: 0 0 30px hsl(var(--primary) / 0.4),
              0 0 60px hsl(var(--primary) / 0.2),
              0 16px 64px rgba(0, 0, 0, 0.15);
}

.cosmicButton:hover::before {
  left: 100%;
}

.cosmicButton:focus {
  outline: none;
  box-shadow: 0 0 0 3px hsl(var(--primary) / 0.3),
              0 0 30px hsl(var(--primary) / 0.4),
              0 0 60px hsl(var(--primary) / 0.2);
}

/* ✅ NEW: Touch Target Utility - Ensures 44px minimum for accessibility */
@utility touchTarget {
  min-width: 44px;
  min-height: 44px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.5rem;
}

@utility glassNav {
  background: hsl(var(--card) / 0.25);
  backdrop-filter: blur(24px);
  -webkit-backdrop-filter: blur(24px);
  border-bottom: 1px solid hsl(var(--border));
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.06);
}

/* Fallbacks for browsers that don't support backdrop-filter */
@supports not (backdrop-filter: blur(24px)) {
  .glassNav {
    background: hsl(var(--card) / 0.85);
  }
  
  .glassInput {
    background: hsl(var(--card) / 0.85);
  }
  
  .cardHover {
    background: hsl(var(--card) / 0.85);
  }
  
  .gradientBorder {
    background: hsl(var(--card) / 0.85);
  }
  
  .sectionGlass {
    background: hsl(var(--card) / 0.45);
  }
}